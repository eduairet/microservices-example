services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_PASSWORD: postgrespw
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--quiet",
          "127.0.0.1/test",
          "--eval",
          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq_container
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 5s
      retries: 5
  ascii-service:
    image: ${DOCKER_USERNAME}/ascii-service:latest
    container_name: ascii_service_container
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;Database=AsciiServiceDb;User Id=postgres;Password=postgrespw
      - RABBIT_MQ_HOST=rabbitmq
      - IDENTITY_SERVICE_URL=http://identity-service/api/v1
    ports:
      - 5100:80
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      identity-service:
        condition: service_started
  gateway-service:
    image: ${DOCKER_USERNAME}/gateway-service:latest
    container_name: gateway_service_container
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - IDENTITY_SERVICE_URL=http://identity-service/api/v1
    ports:
      - 5103:80
    depends_on:
      - identity-service
      - ascii-service
      - search-service
  identity-service:
    image: ${DOCKER_USERNAME}/identity-service:latest
    container_name: identity_service_container
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;Database=IdentityServiceDb;User Id=postgres;Password=postgrespw
      - SUPER_ADMIN_EMAIL=${SUPER_ADMIN_EMAIL}
      - SUPER_ADMIN_PASSWORD=${SUPER_ADMIN_PASSWORD}
      - JWT_KEY=${JWT_KEY}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
    ports:
      - 5101:80
    depends_on:
      postgres:
        condition: service_healthy
  search-service:
    image: ${DOCKER_USERNAME}/search-service:latest
    container_name: search_service_container
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
      - DB_NAME=SearchServiceDb
      - ASCII_SERVICE_URL=http://ascii-service/api/v1
      - RABBIT_MQ_HOST=rabbitmq
    ports:
      - 5102:80
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      ascii-service:
        condition: service_started

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: ./postgres_data
      o: bind
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      device: ./mongodb_data
      o: bind
